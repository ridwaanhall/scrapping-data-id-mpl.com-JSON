def fetch_team_ae(url: str):
    # response = requests.get(url)
    # if response.status_code != 200:
    #     return {'error': 'Failed to fetch data'}

    # soup = BeautifulSoup(response.text, 'html.parser')

    # team_data = {}

    # # Find team name and social media links
    # team_info = soup.find('div', class_='col-lg-8 offset-lg-2')
    # if team_info:
    #     team_name = team_info.find('h4').text.strip()
    #     team_data['team_name'] = team_name

    #     social_media_links = team_info.find('div', class_='icon-socmed')
    #     if social_media_links:
    #         social_media = {}
    #         for link in social_media_links.find_all('a'):
    #             platform = link['href'].split('/')[-1]
    #             social_media[platform] = link['href']
    #         team_data['social_media'] = social_media

    # # Find player and coach information
    # roster_section = soup.find('div', {'data-ga-impression': 'Section Roster Team Detail'})
    # if roster_section:
    #     roster_data = []
    #     for player_info in roster_section.find_all('div', class_='col-md-3 col-6'):
    #         player_name = player_info.find('div', class_='player-name').text.strip()
    #         player_role = player_info.find('div', class_='player-role').text.strip()
    #         roster_data.append({'player_name': player_name, 'player_role': player_role})
    #     team_data['roster'] = roster_data

    # # Find match details
    # match_section = soup.find('div', {'data-ga-impression': 'Section Match Team Detail'})
    # if match_section:
    #     match_data = []
    #     for match_info in match_section.find_all('div', class_='match-team'):
    #         match_detail = {}
    #         match_detail['opponent'] = match_info.find_all('div', class_='match-logo')[-1].text.strip()
    #         match_detail['score'] = match_info.find('div', class_='score').text.strip()
    #         # match_detail['date'] = match_info.find('div', style='font-weight: 400;').text.strip()
    #         match_detail['result'] = match_info.find('div', class_='match-status-wl').text.strip()
    #         match_data.append(match_detail)
    #     team_data['matches'] = match_data

    # return team_data
    
    # Fetch the HTML content
    response = requests.get(url)
    html_content = response.text

    # Parse the HTML
    soup = BeautifulSoup(html_content, "html.parser")

    # Extract team information
    team_name = soup.find("h4", class_="d-flex").text.strip()
    team_logo_url = soup.find("img", class_="team-logo")["src"]

    # Extract social media links
    social_media_links = {}
    social_media_div = soup.find("div", class_="icon-socmed")
    for link in social_media_div.find_all("a"):
        social_media_links[link["href"]] = link.find("i")["class"][0].split("-")[-1]

    # Extract roster for Season 13
    roster = []
    roster_div = soup.find("div", {"data-ga-impression": "Section Roster Team Detail"})
    for player_div in roster_div.find_all("div", class_="col-md-3"):
        player_name = player_div.find("div", class_="player-name").text.strip()
        player_role = player_div.find("div", class_="player-role").text.strip()
        player_image_url = player_div.find("img")["src"]
        roster.append({"name": player_name, "role": player_role, "image_url": player_image_url})

    # Extract match details for Season 13
    matches = []
    matches_div = soup.find("div", {"data-ga-impression": "Section Match Team Detail"})
    for match_div in matches_div.find_all("div", class_="match-team"):
        teams = match_div.find_all("div", class_="match-logo")
        team1 = teams[0].text.strip()
        team2 = teams[1].text.strip()
        score = match_div.find("div", class_="score").text.strip()
        status = match_div.find("div", class_="match-status-wl").text.strip()
        date_info = match_div.find_all("div", class_="col-12")
        # week = date_info[0].text.strip()
        # date = date_info[1].text.strip()
        matches.append({"team1": team1, "team2": team2, "score": score, "status": status, 
                        })

    # Return the extracted data
    return {
        "team_name": team_name,
        "team_logo_url": team_logo_url,
        "social_media_links": social_media_links,
        "roster": roster,
        "matches": matches
    }